{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lambda and API Gateway for lambda.cloudamp.io",
  "Resources": {

    "CloudampLambda": {
      "DependsOn": ["CloudampLambdaRole"],
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "cloudamp-library",
        "Code": {
          "S3Bucket": "cloudamp-lambda",
          "S3Key": "cloudamp-lambda.zip"
        },
        "Role": {
          "Fn::GetAtt": ["CloudampLambdaRole", "Arn"]
        },
        "Timeout": 60,
        "Handler": "index.library",
        "Runtime": "nodejs6.10",
        "MemorySize": 128
      }
    },
    "LibraryResource": {
      "DependsOn": [
        "CloudampApi"
      ],
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {"Ref": "CloudampApi"},
        "ParentId": {"Fn::GetAtt": ["CloudampApi", "RootResourceId"]},
        "PathPart": "library"
      }
    },
    "LibraryGet": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "CloudampLambdaLibraryPermission",
        "CloudampApi",
        "LibraryResource",
        "CloudampLambda"
      ],
      "Properties": {
        "HttpMethod": "GET",
        "RestApiId": {"Ref": "CloudampApi"},
        "ResourceId": {"Ref": "LibraryResource"},
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {"Fn::Join" : ["", ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["CloudampLambda", "Arn"]}, "/invocations"]]},
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "RequestTemplates": {
            "application/json": {"Fn::Join" : ["", [
              "{",
                "\"source\": \"$input.params('source')\",",
                "\"token\" : \"$input.params('token')\"",
              "}"
            ]]}
          }
        },
        "RequestParameters": {
          "method.request.querystring.source": true,
          "method.request.querystring.token": false
        },
        "MethodResponses": [
          {
            "ResponseModels": {},
            "ResponseParameters": {},
            "StatusCode": 200
          }
        ]
      }
    },
    "CloudampLambdaLibraryPermission": {
      "DependsOn": ["CloudampApi","CloudampLambda"],
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["CloudampLambda", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Join": ["",
          ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "CloudampApi"}, "/*"]
        ]}
      }
    },



    "CloudampLambdaStreamUrl": {
      "DependsOn": ["CloudampLambdaRole"],
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "cloudamp-streamurl",
        "Code": {
          "S3Bucket": "cloudamp-lambda",
          "S3Key": "cloudamp-lambda.zip"
        },
        "Role": {
          "Fn::GetAtt": ["CloudampLambdaRole", "Arn"]
        },
        "Timeout": 60,
        "Handler": "index.streamUrl",
        "Runtime": "nodejs6.10",
        "MemorySize": 128
      }
    },
    "StreamResource": {
      "DependsOn": [
        "CloudampApi"
      ],
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {"Ref": "CloudampApi"},
        "ParentId": {"Fn::GetAtt": ["CloudampApi", "RootResourceId"]},
        "PathPart": "stream"
      }
    },
    "StreamUrlResource": {
      "DependsOn": [
        "StreamResource"
      ],
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {"Ref": "CloudampApi"},
        "ParentId": {"Ref": "StreamResource"},
        "PathPart": "url"
      }
    },
    "StreamUrlIdResource": {
      "DependsOn": [
        "StreamUrlResource"
      ],
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {"Ref": "CloudampApi"},
        "ParentId": {"Ref": "StreamUrlResource"},
        "PathPart": "{id}"
      }   
    },
    "StreamUrlGet": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "CloudampLambdaStreamUrlPermission",
        "CloudampApi",
        "LibraryResource",
        "StreamUrlIdResource"
      ],
      "Properties": {
        "HttpMethod": "GET",
        "RestApiId": {"Ref": "CloudampApi"},
        "ResourceId": {"Ref": "StreamUrlIdResource"},
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {"Fn::Join" : ["", ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["CloudampLambdaStreamUrl", "Arn"]}, "/invocations"]]},
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "RequestTemplates": {
            "application/json": {"Fn::Join" : ["", [
              "{",
              "\"source\": \"$input.params('source')\",",
              "\"token\" : \"$input.params('token')\",",
              "\"id\"    : \"$input.params('id')\"",
              "}"
            ]]}
          }
        },
        "RequestParameters": {
          "method.request.querystring.source": true,
          "method.request.querystring.token": false
        },
        "MethodResponses": [
          {
            "ResponseModels": {},
            "ResponseParameters": {},
            "StatusCode": 200
          }
        ]
      }
    },
    "CloudampLambdaStreamUrlPermission": {
      "DependsOn": ["CloudampApi","CloudampLambdaStreamUrl"],
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["CloudampLambdaStreamUrl", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Join": ["",
          ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "CloudampApi"}, "/*"]
        ]}
      }
    },






    "CloudampApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Cloudamp API Gateway"
      }
    },
    "CloudampApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {"Ref": "CloudampApi"}
      },
      "DependsOn": [
        "LibraryGet",
        "CloudampApi"
      ]
    },
    "CloudampLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["lambda.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/"
      }
    },
    "CloudampLambdaLogPolicy": {
      "DependsOn": [
        "CloudampLambdaRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CloudampLambdaLogPolicy",
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "logs:CreateLogGroup",
              "Resource": {"Fn::Join": ["",
                ["arn:aws:logs:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"},":*"]
              ]}
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": [
                {"Fn::Join": ["",
                  ["arn:aws:logs:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"},":log-group:/aws/lambda/*"]
                ]}
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "CloudampLambdaRole"
          }
        ]
      }
    },
    "CloudampDyanamoPolicy": {
      "DependsOn": [
        "CloudampLambdaRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CloudampDyanamoPolicy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "Stmt1456300038000",
              "Effect": "Allow",
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:Scan",
                "dynamodb:UpdateItem"
              ],
              "Resource": [
                {"Fn::Join": ["",
                  ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"},":table/cloudamp_media"]
                ]}
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "CloudampLambdaRole"
          }
        ]
      }
    },
    "CloudampS3Policy": {
      "DependsOn": [
        "CloudampLambdaRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CloudampS3Policy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [
                "arn:aws:s3:::io.cloudamp/*"
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "CloudampLambdaRole"
          }
        ]
      }
    }
  }
}